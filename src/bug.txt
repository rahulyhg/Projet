Faire en sorte que la page soit afficher que quand les images sont chargé

Faire en sorte que les utilisateurs puisse modifier les compte (avec les droit de page qui vont avec)

Voir pour des droit sur autre personne et sur soit meme en fonction des cas

mettre en automatique que si on coche ajouter ou modifier par defaut, que l'on ai acces  au Selected
=> faire une class a l'event (change) avec en parametre la valeur + sur quelle input on est et dans cette fonction definir toute les dependance

Faire page de Modification de mon compte (la meme que pour voia la page de compte d'une autre personne mise a part le bouton modifier)

séparer en deux group pour group et user (group user)

Faire une table avec les parametre globaux du site
=> possibilite de modifier l'interval de refresh
=> logo site + logo dans bare navigateur
=> titre
=> image arriere plan
=> apercue de la page d'acceuil avec le <app-root></app-root> dans un div pour afficher la premiere page

Pour la modification des infomration logo et titre dans la barre, mise en place d'un sytem de visionnage instantané sur simulation 
(genre un screen d'un onglet chrome ou le titre et le logo on rajouté par dessus et ou l'on compte le nombre de caractere du titre pour savoir si on met des '...' a la fin pour pas que ca depasse)

Créer un class avec directive pour tout les importation de fichier comme pour les photo de profile (avec drap and drop)

Mise en place d'un hotorique + analytique
=> a chaque changement de page metre a jour ma date de dernier activité (donc logIn) de l'utilisateur plus son historique + mettre a jour les données de la page (son nombre de vue ...)

Mise en place d'une bare ou l'on peux voir les membre actif, innactif (un peux comme discord)
=> la requete va determiner si un utilisateur est actif que si sa sate de connection (logIn) est plus récente que 1 minutes

voir pour un system de script qui tourne sur le serveur (en puton) qui met a jours les staut user en fonction de leur heure de logIn

les requete avec interval ne doivent pas mettre a jour le statut de l'utilisateur

structurer le peus de CSS présent  (par page)
=> a la limite, remettre les fichiers de base ppour la gestion du Css par conponent et ne mettre dans le style.css que les propriérté de base

Mise en place d'in system de report de bug dans le footer

le click droit sur le popup dev active le drop

verifier les format de fichier que l'on upload
=> que des .ico pour les icone
=> que les format image pour les images ...

bug : ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked lorsque l'on change de page avec le popup ouvert

faire page d'erreur par default pour page inconue

voir pour mettre de la transparence sur le blanc dans les logo de page
=> via methode automatique

mettre dans une seul requete l'initialisation de la page (user + page)

dans le SelectedPageManagement, mettre une liste deroulante avec la liste de fichier icone

Mettre un fichier valide dans le contructeur de l'object Upload

Si on supprime un User/Group/page, et que l'on fait page arriere, ca met page par defaut
Avant de lancer la page, regarder si l'object que l'on veux editer existe

Pour les page ou il est necessaire d'etre connecter, verifier si le current user a le statut en true

creer un dossier Api
=> un fichier bdd.ts ou dedans on vient simuler la base de données avec toutes les tablde dedans (USER, GROUP ....)
=> le fichier Data.ts renomé en Api.ts ou l'on va venir faire les traietemnt des données à revoyer à l'application

Faire la vérification des format de données (comme pour les @GameTag ou il y pas d'espace)